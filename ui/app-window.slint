import { Button, VerticalBox, GridBox, HorizontalBox } from "std-widgets.slint";

global Constants {
    out property <int> num-buttons: 3;
}

component QuickLinkItem {
    width: 200px;
    height: 200px;
    in property <string> label: "Quick Link";
    callback clicked(string);

    VerticalBox {
        Rectangle {
            width: parent.width;
            height: parent.height;
            background: #0025ff;
            border-radius: 8px;
            TouchArea {
                clicked => {
                    debug("Rectangle clicked:", root.label);
                    root.clicked(root.label);
                }
                Image {
                    width: 100px;
                    height: 100px;
                    x: (parent.width - self.width) / 2;  // Center horizontally
                y: (parent.height - self.height) / 2;  // Center vertically
                source: @image-url("../icons/vscode-alt.svg");
                }
            }
        }

        Text {
            text: root.label;
            horizontal-alignment: center;
            font-size: 16px;
            color: black;
        }
    }
}

export component AppWindow inherits Window {
    width: 800px;
    height: 640px;

    in property <[string]> labels: ["python", "rust", "solidpython2"];
    callback launch(string);

    VerticalBox {
        spacing: 100px;
        alignment: center;
        HorizontalBox {
            alignment: space-around;
            for item[index] in Constants.num-buttons: QuickLinkItem {
                label: root.labels[index];
                clicked(label) => {
                    root.launch(label)
                }
            }
        }

        VerticalBox {
            spacing: 50px;
            Text {
                text: "Launch VSCode Portable";
                font-size: 24px;
                horizontal-alignment: center;
            }

            HorizontalBox {
                alignment: center;
                Rectangle {
                    width: 400px;
                    height: 40px;
                    border-width: 2px;
                    border-color: purple; // Border color
                    
                    
                    TextInput {
                        width: parent.width - 10px; // Add padding for the TextInput
                        height: parent.height - 10px; // Add padding for the TextInput
                        text: "";
                        
                        //horizontal-alignment: center; // Centers the text inside the TextInput
                        vertical-alignment: center;   // Centers the text inside the TextInput
                        accepted => {
                        }
                    }
                }
            }
        }
    }
}
